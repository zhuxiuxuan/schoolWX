# server config
server.port:80

# mysql连接
spring.datasource.url:jdbc:mysql://localhost:3306/campusWebs?serverTimezone=GMT%2B8&useUnicode=true&allowMultiQueries=true&characterEncoding=UTF-8
spring.datasource.username:root
spring.datasource.password:
spring.datasource.driver-class-name:com.mysql.cj.jdbc.Driver

#使用Druid数据源 
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 初始化大小，最小，最大 
spring.datasource.initialSize=1
spring.datasource.minIdle=3
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间 
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒 
spring.datasource.minEvictableIdleTimeMillis=30000
spring.datasource.validationQuery=select 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小 
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 
spring.datasource.filters=stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录 
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据 
#spring.datasource.useGlobalDataSourceStat=true 
#------------------------------------------------------------------------------------------------

#thymeleaf模板引擎
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
#开发阶段需关闭缓存，否则无法看到实时页面
spring.thymeleaf.cache=false

# redis
# \u8FDE\u63A5\u5DE5\u5382\u4F7F\u7528\u7684\u6570\u636E\u5E93\u7D22\u5F15\u3002
#spring.redis.database= 0
# Redis\u670D\u52A1\u5668\u4E3B\u673A\u3002
#spring.redis.host= localhost
# \u767B\u5F55redis\u670D\u52A1\u5668\u7684\u5BC6\u7801\u3002
#spring.redis.password= 
# \u7ED9\u5B9A\u65F6\u95F4\u6C60\u53EF\u4EE5\u5206\u914D\u7684\u6700\u5927\u8FDE\u63A5\u6570\u3002 \u4F7F\u7528\u8D1F\u503C\u4E3A\u65E0\u9650\u5236\u3002
#spring.redis.pool.max-active= 8
# \u6C60\u4E2D\u201C\u7A7A\u95F2\u201D\u8FDE\u63A5\u7684\u6700\u5927\u6570\u91CF\u3002 \u4F7F\u7528\u8D1F\u503C\u6765\u8868\u793A\u65E0\u9650\u6570\u91CF\u7684\u7A7A\u95F2\u8FDE\u63A5\u3002
#spring.redis.pool.max-idle= 8
# \u8FDE\u63A5\u5206\u914D\u5728\u6C60\u8017\u5C3D\u4E4B\u524D\u5728\u629B\u51FA\u5F02\u5E38\u4E4B\u524D\u5E94\u963B\u6B62\u7684\u6700\u5927\u65F6\u95F4\u91CF\uFF08\u4EE5\u6BEB\u79D2\u4E3A\u5355\u4F4D\uFF09\u3002 \u4F7F\u7528\u8D1F\u503C\u65E0\u9650\u671F\u5730\u963B\u6B62\u3002
#spring.redis.pool.max-wait= -1
# \u5B9A\u4E49\u6C60\u4E2D\u7EF4\u62A4\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5\u6570\u3002 \u6B64\u8BBE\u7F6E\u53EA\u6709\u5728\u6B63\u503C\u65F6\u624D\u6709\u6548\u679C\u3002
#spring.redis.pool.min-idle= 0
# redis\u670D\u52A1\u5668\u7AEF\u53E3
#spring.redis.port= 6379
# redis\u670D\u52A1\u5668\u540D\u79F0
#spring.redis.sentinel.master=
#spring.redis.sentinel.nodes= 
# \u8FDE\u63A5\u8D85\u65F6\uFF08\u6BEB\u79D2\uFF09\u3002
#spring.redis.timeout= 0

# logging
debug=true
logging.level.com.zxx.springBoot=DEBUG
logging.level.org.springframework.boot.autoconfigure=ERROR
logging.pattern.console=%d{yyyy/MM/dd-HH\:mm\:ss} [%thread] %-5level %logger- %msg%n 
#logging.pattern.file=%d{yyyy/MM/dd-HH:mm} [%thread] %-5level %logger- %msg%n
#logging.file = myloggin.log
#logging.file.max-size=100M
#logging.file.max-history=10
#logging.config=classpath:conf/xml/logback.xml

# mybatis
#mybatis.mapper-locations: classpath:mapper/*.xml
#mybatis.configuration.map-underscore-to-camel-case: true


